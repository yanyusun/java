<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


    <context:annotation-config />
    <tx:annotation-driven />
    <bean id="btmConfig" factory-method="getConfiguration" class="bitronix.tm.TransactionManagerServices"/>
    <bean id="BitronixTransactionManager" factory-method="getTransactionManager"
          class="bitronix.tm.TransactionManagerServices" depends-on="btmConfig" destroy-method="shutdown" />
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="BitronixTransactionManager" />
        <property name="userTransaction" ref="BitronixTransactionManager" />
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="transactionManager">
        <property name="persistenceUnitName" value="org.jbpm.persistence.spring.jta"/>
        <property name="persistenceXmlLocation" value="classpath:/jbpm-persistence.xml" />
    </bean>

    <util:properties id="roleProperties" location="classpath:/roles.properties" />

    <bean id="userGroupCallback" class="org.jbpm.services.task.identity.JBossUserGroupCallbackImpl">
        <constructor-arg name="userGroups" ref="roleProperties"></constructor-arg>
    </bean>
    <bean id="identityProvider" class="com.qs.jbpm.SpringSecurityIdentityProvider"/>

    <bean id="runtimeManagerFactory" class="org.kie.spring.manager.SpringRuntimeManagerFactoryImpl">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="userGroupCallback" ref="userGroupCallback"/>
    </bean>

    <bean id="transactionCmdService" class="org.jbpm.shared.services.impl.TransactionalCommandService">
        <constructor-arg name="emf" ref="entityManagerFactory"></constructor-arg>
    </bean>

    <bean id="taskService" class="org.kie.spring.factorybeans.TaskServiceFactoryBean" destroy-method="close">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="userGroupCallback" ref="userGroupCallback"/>
        <property name="listeners">
            <list>
                <bean class="org.jbpm.services.task.audit.JPATaskLifeCycleEventListener">
                    <constructor-arg value="true"/>
                </bean>
            </list>
        </property>
    </bean>



    <!-- definition service -->
    <bean id="definitionService" class="org.jbpm.kie.services.impl.bpmn2.BPMN2DataServiceImpl"/>

    <!-- runtime data service -->
    <bean id="runtimeDataService" class="org.jbpm.kie.services.impl.RuntimeDataServiceImpl">
        <property name="commandService" ref="transactionCmdService"/>
        <property name="identityProvider" ref="identityProvider"/>
        <property name="taskService" ref="taskService"/>
    </bean>

    <!-- deployment service -->
    <bean id="deploymentService" class="org.jbpm.kie.services.impl.KModuleDeploymentService" depends-on="entityManagerFactory" init-method="onInit">
        <property name="bpmn2Service" ref="definitionService"/>
        <property name="emf" ref="entityManagerFactory"/>
        <property name="managerFactory" ref="runtimeManagerFactory"/>
        <property name="identityProvider" ref="identityProvider"/>
        <property name="runtimeDataService" ref="runtimeDataService"/>
    </bean>

    <!-- process service -->
    <bean id="processService" class="org.jbpm.kie.services.impl.ProcessServiceImpl" depends-on="deploymentService">
        <property name="dataService" ref="runtimeDataService"/>
        <property name="deploymentService" ref="deploymentService"/>
    </bean>

    <!-- user task service -->
    <bean id="userTaskService" class="org.jbpm.kie.services.impl.UserTaskServiceImpl" depends-on="deploymentService">
        <property name="dataService" ref="runtimeDataService"/>
        <property name="deploymentService" ref="deploymentService"/>
    </bean>

    <!-- register runtime data service as listener on deployment service so it can receive notification about deployed and undeployed units -->
    <bean id="data" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" depends-on="deploymentService">
        <property name="targetObject" ref="deploymentService"></property>
        <property name="targetMethod"><value>addListener</value></property>
        <property name="arguments">
            <list>
                <ref bean="runtimeDataService"/>
            </list>
        </property>
    </bean>

    <bean id="testTow" class="com.qs.jbpm.TestTow">
        <property name="data" ref="data"></property>
        <property name="definitionService" ref="definitionService"></property>
        <property name="deploymentService" ref="deploymentService"></property>
        <property name="processService" ref="processService"></property>
        <property name="runtimeDataService" ref="runtimeDataService"></property>
        <property name="userTaskService" ref="userTaskService"></property>
    </bean>
</beans>